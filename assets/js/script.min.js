//LI class constructor
function List(obj) {
    this.listObject = obj;
    this.parent = obj.parentNode;
}

//Li class methods
List.prototype.getListObject = function() {
        return this.listObject;
};

List.prototype.init = function () {
    var listObj = this.getListObject(),
        $self = this;

    listObj.setAttribute("draggable", "true");

    listObj.ondragstart = function (ev) {
        $self.drag(ev);
    };
};

List.prototype.drag = function(ev) {
    ev.dataTransfer.setData('object', this.getListObject().outerHTML);

    console.log("DRAG", this.getListObject().outerHTML); /////////////
};

//UL class constructor
function Ul(obj) {
    this.ulObject = obj;
}

//UL class methods
Ul.prototype.getUlObject =  function() {
    return this.ulObject;
};

Ul.prototype.allowDrop =  function (ev) {
    ev.preventDefault();
};

Ul.prototype.drop = function(ev) {
    ev.preventDefault();

    var data = ev.dataTransfer.getData('object');

    console.log("DROP", data);  /////////////////////

    this.addLi(data);
};

Ul.prototype.addLi = function(data) {
    this.getUlObject().innerHTML += data;
};

Ul.prototype.init = function() {
    var obj = this.getUlObject(),
        $self = this;

    obj.ondragover = function(ev) {
        $self.allowDrop(ev);
    };

    obj.ondrop = function(ev) {
        $self.drop(ev);
    };
};

//UL class constructor
function UlBordered(obj) {
    this.ulObject = obj;
}

//UL inheritance
UlBordered.prototype = Object.create(Ul.prototype);

UlBordered.prototype.constructor = UlBordered;

//UL class methods
UlBordered.prototype.addLi = function (data) {
    var $self = this;

    $self.getUlObject().classList.add('b-list__bordered');

    setTimeout(function() {
        $self.getUlObject().classList.remove('b-list__bordered');
    }, 200);

    $self.getUlObject().innerHTML += data;
};

//UL class constructor
function UlBackgrounded(obj) {
    this.ulObject = obj;
}

//UL inheritance
UlBackgrounded.prototype = Object.create(Ul.prototype);

UlBackgrounded.prototype.constructor = UlBackgrounded;

//UL class methods
UlBackgrounded.prototype.addLi = function (data) {
    var $self = this;

    $self.getUlObject().classList.add('b-list__bordered_with-background');

    setTimeout(function() {
        $self.getUlObject().classList.remove('b-list__bordered_with-background');
    }, 200);

    $self.getUlObject().innerHTML += data;
};

var ulLen = document.getElementsByClassName('b-list').length,
    liLen = document.getElementsByClassName('b-list-item').length,
    liArr = [];

for(var i=ulLen; i--;) {
    var ulItem = document.getElementsByClassName('b-list')[i],
        ulObj;


    if (i===2) {
        ulObj = new UlBackgrounded(ulItem);
    }
    else if (i===1) {
        ulObj = new UlBordered(ulItem);
    }
    else {
        ulObj = new Ul(ulItem);
    }
    ulObj.init();
}

for(var j=liLen; j--;) {
    var liItem = document.getElementsByClassName('b-list-item')[j],
        liObj = new List(liItem);

    liObj.init();

    liArr.push(liObj);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3QuQ2xhc3MuanMiLCJVbC5DbGFzcy5qcyIsImFwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDckZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJzY3JpcHQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9MSSBjbGFzcyBjb25zdHJ1Y3RvclxuZnVuY3Rpb24gTGlzdChvYmopIHtcbiAgICB0aGlzLmxpc3RPYmplY3QgPSBvYmo7XG4gICAgdGhpcy5wYXJlbnQgPSBvYmoucGFyZW50Tm9kZTtcbn1cblxuLy9MaSBjbGFzcyBtZXRob2RzXG5MaXN0LnByb3RvdHlwZS5nZXRMaXN0T2JqZWN0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RPYmplY3Q7XG59O1xuXG5MaXN0LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBsaXN0T2JqID0gdGhpcy5nZXRMaXN0T2JqZWN0KCksXG4gICAgICAgICRzZWxmID0gdGhpcztcblxuICAgIGxpc3RPYmouc2V0QXR0cmlidXRlKFwiZHJhZ2dhYmxlXCIsIFwidHJ1ZVwiKTtcblxuICAgIGxpc3RPYmoub25kcmFnc3RhcnQgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgJHNlbGYuZHJhZyhldik7XG4gICAgfTtcbn07XG5cbkxpc3QucHJvdG90eXBlLmRyYWcgPSBmdW5jdGlvbihldikge1xuICAgIGV2LmRhdGFUcmFuc2Zlci5zZXREYXRhKCdvYmplY3QnLCB0aGlzLmdldExpc3RPYmplY3QoKS5vdXRlckhUTUwpO1xuXG4gICAgY29uc29sZS5sb2coXCJEUkFHXCIsIHRoaXMuZ2V0TGlzdE9iamVjdCgpLm91dGVySFRNTCk7IC8vLy8vLy8vLy8vLy9cbn07XG4iLCIvL1VMIGNsYXNzIGNvbnN0cnVjdG9yXG5mdW5jdGlvbiBVbChvYmopIHtcbiAgICB0aGlzLnVsT2JqZWN0ID0gb2JqO1xufVxuXG4vL1VMIGNsYXNzIG1ldGhvZHNcblVsLnByb3RvdHlwZS5nZXRVbE9iamVjdCA9ICBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy51bE9iamVjdDtcbn07XG5cblVsLnByb3RvdHlwZS5hbGxvd0Ryb3AgPSAgZnVuY3Rpb24gKGV2KSB7XG4gICAgZXYucHJldmVudERlZmF1bHQoKTtcbn07XG5cblVsLnByb3RvdHlwZS5kcm9wID0gZnVuY3Rpb24oZXYpIHtcbiAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgdmFyIGRhdGEgPSBldi5kYXRhVHJhbnNmZXIuZ2V0RGF0YSgnb2JqZWN0Jyk7XG5cbiAgICBjb25zb2xlLmxvZyhcIkRST1BcIiwgZGF0YSk7ICAvLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuICAgIHRoaXMuYWRkTGkoZGF0YSk7XG59O1xuXG5VbC5wcm90b3R5cGUuYWRkTGkgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgdGhpcy5nZXRVbE9iamVjdCgpLmlubmVySFRNTCArPSBkYXRhO1xufTtcblxuVWwucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgb2JqID0gdGhpcy5nZXRVbE9iamVjdCgpLFxuICAgICAgICAkc2VsZiA9IHRoaXM7XG5cbiAgICBvYmoub25kcmFnb3ZlciA9IGZ1bmN0aW9uKGV2KSB7XG4gICAgICAgICRzZWxmLmFsbG93RHJvcChldik7XG4gICAgfTtcblxuICAgIG9iai5vbmRyb3AgPSBmdW5jdGlvbihldikge1xuICAgICAgICAkc2VsZi5kcm9wKGV2KTtcbiAgICB9O1xufTtcblxuLy9VTCBjbGFzcyBjb25zdHJ1Y3RvclxuZnVuY3Rpb24gVWxCb3JkZXJlZChvYmopIHtcbiAgICB0aGlzLnVsT2JqZWN0ID0gb2JqO1xufVxuXG4vL1VMIGluaGVyaXRhbmNlXG5VbEJvcmRlcmVkLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVWwucHJvdG90eXBlKTtcblxuVWxCb3JkZXJlZC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBVbEJvcmRlcmVkO1xuXG4vL1VMIGNsYXNzIG1ldGhvZHNcblVsQm9yZGVyZWQucHJvdG90eXBlLmFkZExpID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICB2YXIgJHNlbGYgPSB0aGlzO1xuXG4gICAgJHNlbGYuZ2V0VWxPYmplY3QoKS5jbGFzc0xpc3QuYWRkKCdiLWxpc3RfX2JvcmRlcmVkJyk7XG5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAkc2VsZi5nZXRVbE9iamVjdCgpLmNsYXNzTGlzdC5yZW1vdmUoJ2ItbGlzdF9fYm9yZGVyZWQnKTtcbiAgICB9LCAyMDApO1xuXG4gICAgJHNlbGYuZ2V0VWxPYmplY3QoKS5pbm5lckhUTUwgKz0gZGF0YTtcbn07XG5cbi8vVUwgY2xhc3MgY29uc3RydWN0b3JcbmZ1bmN0aW9uIFVsQmFja2dyb3VuZGVkKG9iaikge1xuICAgIHRoaXMudWxPYmplY3QgPSBvYmo7XG59XG5cbi8vVUwgaW5oZXJpdGFuY2VcblVsQmFja2dyb3VuZGVkLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVWwucHJvdG90eXBlKTtcblxuVWxCYWNrZ3JvdW5kZWQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gVWxCYWNrZ3JvdW5kZWQ7XG5cbi8vVUwgY2xhc3MgbWV0aG9kc1xuVWxCYWNrZ3JvdW5kZWQucHJvdG90eXBlLmFkZExpID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICB2YXIgJHNlbGYgPSB0aGlzO1xuXG4gICAgJHNlbGYuZ2V0VWxPYmplY3QoKS5jbGFzc0xpc3QuYWRkKCdiLWxpc3RfX2JvcmRlcmVkX3dpdGgtYmFja2dyb3VuZCcpO1xuXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgJHNlbGYuZ2V0VWxPYmplY3QoKS5jbGFzc0xpc3QucmVtb3ZlKCdiLWxpc3RfX2JvcmRlcmVkX3dpdGgtYmFja2dyb3VuZCcpO1xuICAgIH0sIDIwMCk7XG5cbiAgICAkc2VsZi5nZXRVbE9iamVjdCgpLmlubmVySFRNTCArPSBkYXRhO1xufTsiLCJcbnZhciB1bExlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2ItbGlzdCcpLmxlbmd0aCxcbiAgICBsaUxlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2ItbGlzdC1pdGVtJykubGVuZ3RoLFxuICAgIGxpQXJyID0gW107XG5cbmZvcih2YXIgaT11bExlbjsgaS0tOykge1xuICAgIHZhciB1bEl0ZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdiLWxpc3QnKVtpXSxcbiAgICAgICAgdWxPYmo7XG5cblxuICAgIGlmIChpPT09Mikge1xuICAgICAgICB1bE9iaiA9IG5ldyBVbEJhY2tncm91bmRlZCh1bEl0ZW0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChpPT09MSkge1xuICAgICAgICB1bE9iaiA9IG5ldyBVbEJvcmRlcmVkKHVsSXRlbSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB1bE9iaiA9IG5ldyBVbCh1bEl0ZW0pO1xuICAgIH1cbiAgICB1bE9iai5pbml0KCk7XG59XG5cbmZvcih2YXIgaj1saUxlbjsgai0tOykge1xuICAgIHZhciBsaUl0ZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdiLWxpc3QtaXRlbScpW2pdLFxuICAgICAgICBsaU9iaiA9IG5ldyBMaXN0KGxpSXRlbSk7XG5cbiAgICBsaU9iai5pbml0KCk7XG5cbiAgICBsaUFyci5wdXNoKGxpT2JqKTtcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
